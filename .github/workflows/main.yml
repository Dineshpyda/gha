name: Test
on: 
  pull_request:
    #types:
      #- "labeled"
    branches:
      - 'main'
  push:
    branches:
      - 'main'

jobs:
  terraform:
    name: terraform
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    environment: dev
    defaults:
        run:
          shell: bash

    steps:

      # Checkout the repository
      - name: Checkout
        uses: actions/checkout@v3

      # Setup AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: "us-east-2"
        

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
            terraform_version: 1

      - name: Check Terraform Version
        run: terraform --version

      
      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: terraform -chdir=awsrds/ init

      # Checks that all Terraform configuration files adhere to a canonical format
      - name: Terraform Format
        run: terraform fmt

      - name: Terratest Test
        # You may pin to the exact commit or the version.
        # uses: cloudposse/github-action-terratest@5bc8230c49424e6d0d3ec3bebe4bbf2977d53f87
        uses: cloudposse/github-action-terratest@1.0.0
        with:
          # The directory containing the source code to test
          sourceDir: terratest/

      # Generates an execution plan for Terraform
      - name: Terraform Plan
        run: terraform plan -input=false

       # Terraform apply only onto main with push
      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false
